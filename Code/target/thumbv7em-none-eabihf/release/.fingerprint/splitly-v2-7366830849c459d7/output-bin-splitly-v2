{"$message_type":"diagnostic","message":"unresolved import `rmk::nrf52840_ble`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":127,"byte_end":139,"line_start":7,"line_end":7,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"use rmk::nrf52840_ble::initialize_nrf52840_ble_keyboard_and_run;","highlight_start":10,"highlight_end":22}],"label":"could not find `nrf52840_ble` in `rmk`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `rmk::nrf52840_ble`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rmk::nrf52840_ble::initialize_nrf52840_ble_keyboar\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `nrf52840_ble` in `rmk`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `uart` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":349,"byte_end":353,"line_start":12,"line_end":12,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"    UARTE0_UART0 => embassy_nrf::uart::InterruptHandler<peripherals::UARTE0>;","highlight_start":34,"highlight_end":38}],"label":"could not find `uart` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `uart` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:12:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mf::uart::InterruptHandler<peripherals::UARTE0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `uart` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `rtc` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":689,"byte_end":692,"line_start":17,"line_end":17,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"    RTC0 => embassy_nrf::rtc::InterruptHandler<peripherals::RTC0>;","highlight_start":26,"highlight_end":29}],"label":"could not find `rtc` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `rtc` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:17:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::rtc::InterruptHandler<peripherals::RTC0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `rtc` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `rtc` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":756,"byte_end":759,"line_start":18,"line_end":18,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"    RTC1 => embassy_nrf::rtc::InterruptHandler<peripherals::RTC1>;","highlight_start":26,"highlight_end":29}],"label":"could not find `rtc` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `rtc` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:18:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::rtc::InterruptHandler<peripherals::RTC1>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `rtc` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `ecb` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1168,"byte_end":1171,"line_start":25,"line_end":25,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"    ECB => embassy_nrf::ecb::InterruptHandler;","highlight_start":25,"highlight_end":28}],"label":"could not find `ecb` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `ecb` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:25:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ECB => embassy_nrf::ecb::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ecb` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `ccm` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1219,"byte_end":1222,"line_start":26,"line_end":26,"column_start":29,"column_end":32,"is_primary":true,"text":[{"text":"    CCM_AAR => embassy_nrf::ccm::InterruptHandler;","highlight_start":29,"highlight_end":32}],"label":"could not find `ccm` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `ccm` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:26:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CCM_AAR => embassy_nrf::ccm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ccm` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `comp` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1370,"byte_end":1374,"line_start":29,"line_end":29,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"    COMP_LPCOMP => embassy_nrf::comp::InterruptHandler;","highlight_start":33,"highlight_end":37}],"label":"could not find `comp` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `comp` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:29:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    COMP_LPCOMP => embassy_nrf::comp::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `comp` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `swi` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1424,"byte_end":1427,"line_start":30,"line_end":30,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"    SWI0_EGU0 => embassy_nrf::swi::InterruptHandler<peripherals::SWI0_EGU0>;","highlight_start":31,"highlight_end":34}],"label":"could not find `swi` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `swi` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:30:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::swi::InterruptHandler<peripherals::SWI0_EGU0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `swi` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `swi` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1501,"byte_end":1504,"line_start":31,"line_end":31,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"    SWI1_EGU1 => embassy_nrf::swi::InterruptHandler<peripherals::SWI1_EGU1>;","highlight_start":31,"highlight_end":34}],"label":"could not find `swi` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `swi` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:31:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::swi::InterruptHandler<peripherals::SWI1_EGU1>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `swi` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `swi` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1578,"byte_end":1581,"line_start":32,"line_end":32,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"    SWI2_EGU2 => embassy_nrf::swi::InterruptHandler<peripherals::SWI2_EGU2>;","highlight_start":31,"highlight_end":34}],"label":"could not find `swi` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `swi` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:32:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::swi::InterruptHandler<peripherals::SWI2_EGU2>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `swi` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `swi` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1655,"byte_end":1658,"line_start":33,"line_end":33,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"    SWI3_EGU3 => embassy_nrf::swi::InterruptHandler<peripherals::SWI3_EGU3>;","highlight_start":31,"highlight_end":34}],"label":"could not find `swi` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `swi` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::swi::InterruptHandler<peripherals::SWI3_EGU3>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `swi` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `swi` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1732,"byte_end":1735,"line_start":34,"line_end":34,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"    SWI4_EGU4 => embassy_nrf::swi::InterruptHandler<peripherals::SWI4_EGU4>;","highlight_start":31,"highlight_end":34}],"label":"could not find `swi` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `swi` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:34:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::swi::InterruptHandler<peripherals::SWI4_EGU4>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `swi` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `swi` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1809,"byte_end":1812,"line_start":35,"line_end":35,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"    SWI5_EGU5 => embassy_nrf::swi::InterruptHandler<peripherals::SWI5_EGU5>;","highlight_start":31,"highlight_end":34}],"label":"could not find `swi` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `swi` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:35:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrf::swi::InterruptHandler<peripherals::SWI5_EGU5>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `swi` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `ipc` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2658,"byte_end":2661,"line_start":47,"line_end":47,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"    IPC => embassy_nrf::ipc::InterruptHandler;","highlight_start":25,"highlight_end":28}],"label":"could not find `ipc` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `ipc` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:47:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IPC => embassy_nrf::ipc::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ipc` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `cryptocell` in `embassy_nrf`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2780,"byte_end":2790,"line_start":49,"line_end":49,"column_start":32,"column_end":42,"is_primary":true,"text":[{"text":"    CRYPTOCELL => embassy_nrf::cryptocell::InterruptHandler;","highlight_start":32,"highlight_end":42}],"label":"could not find `cryptocell` in `embassy_nrf`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `cryptocell` in `embassy_nrf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:49:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m> embassy_nrf::cryptocell::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `cryptocell` in `embassy_nrf`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `UARTE0_UART0` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":320,"byte_end":332,"line_start":12,"line_end":12,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    UARTE0_UART0 => embassy_nrf::uart::InterruptHandler<peripherals::UARTE0>;","highlight_start":5,"highlight_end":17}],"label":"not found in `$crate::interrupt::typelevel`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `UARTE0_UART0` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0_UART0 => embassy_nrf::uart::InterruptHandl\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `$crate::interrupt::typelevel`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::timer`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":479,"byte_end":495,"line_start":14,"line_end":14,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"    TIMER0 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER0>;","highlight_start":35,"highlight_end":51}],"label":"not found in `embassy_nrf::timer`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":459,"byte_end":479,"line_start":14,"line_end":14,"column_start":15,"column_end":35,"is_primary":true,"text":[{"text":"    TIMER0 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER0>;","highlight_start":15,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::timer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:14:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m_nrf::timer::InterruptHandler<peripherals::TIMER0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::timer`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    TIMER0 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::timer::\u001b[0m\u001b[0mInterruptHandler<peripherals::TIMER0>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    TIMER0 => InterruptHandler<peripherals::TIMER0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::timer`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":552,"byte_end":568,"line_start":15,"line_end":15,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"    TIMER1 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER1>;","highlight_start":35,"highlight_end":51}],"label":"not found in `embassy_nrf::timer`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":532,"byte_end":552,"line_start":15,"line_end":15,"column_start":15,"column_end":35,"is_primary":true,"text":[{"text":"    TIMER1 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER1>;","highlight_start":15,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::timer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:15:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m_nrf::timer::InterruptHandler<peripherals::TIMER1>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::timer`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    TIMER1 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::timer::\u001b[0m\u001b[0mInterruptHandler<peripherals::TIMER1>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    TIMER1 => InterruptHandler<peripherals::TIMER1>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::timer`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":625,"byte_end":641,"line_start":16,"line_end":16,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"    TIMER2 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER2>;","highlight_start":35,"highlight_end":51}],"label":"not found in `embassy_nrf::timer`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":605,"byte_end":625,"line_start":16,"line_end":16,"column_start":15,"column_end":35,"is_primary":true,"text":[{"text":"    TIMER2 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER2>;","highlight_start":15,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::timer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:16:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m_nrf::timer::InterruptHandler<peripherals::TIMER2>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::timer`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    TIMER2 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::timer::\u001b[0m\u001b[0mInterruptHandler<peripherals::TIMER2>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    TIMER2 => InterruptHandler<peripherals::TIMER2>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::gpiote`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":833,"byte_end":849,"line_start":19,"line_end":19,"column_start":36,"column_end":52,"is_primary":true,"text":[{"text":"    GPIOTE => embassy_nrf::gpiote::InterruptHandler;","highlight_start":36,"highlight_end":52}],"label":"not found in `embassy_nrf::gpiote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":812,"byte_end":833,"line_start":19,"line_end":19,"column_start":15,"column_end":36,"is_primary":true,"text":[{"text":"    GPIOTE => embassy_nrf::gpiote::InterruptHandler;","highlight_start":15,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::gpiote`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:19:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GPIOTE => embassy_nrf::gpiote::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::gpiote`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    GPIOTE => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::gpiote::\u001b[0m\u001b[0mInterruptHandler;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    GPIOTE => InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::timer`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1032,"byte_end":1048,"line_start":23,"line_end":23,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"    TIMER3 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER3>;","highlight_start":35,"highlight_end":51}],"label":"not found in `embassy_nrf::timer`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1012,"byte_end":1032,"line_start":23,"line_end":23,"column_start":15,"column_end":35,"is_primary":true,"text":[{"text":"    TIMER3 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER3>;","highlight_start":15,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::timer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:23:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m_nrf::timer::InterruptHandler<peripherals::TIMER3>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::timer`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    TIMER3 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::timer::\u001b[0m\u001b[0mInterruptHandler<peripherals::TIMER3>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    TIMER3 => InterruptHandler<peripherals::TIMER3>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::timer`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1105,"byte_end":1121,"line_start":24,"line_end":24,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"    TIMER4 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER4>;","highlight_start":35,"highlight_end":51}],"label":"not found in `embassy_nrf::timer`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1085,"byte_end":1105,"line_start":24,"line_end":24,"column_start":15,"column_end":35,"is_primary":true,"text":[{"text":"    TIMER4 => embassy_nrf::timer::InterruptHandler<peripherals::TIMER4>;","highlight_start":15,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::timer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:24:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m_nrf::timer::InterruptHandler<peripherals::TIMER4>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::timer`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    TIMER4 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::timer::\u001b[0m\u001b[0mInterruptHandler<peripherals::TIMER4>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    TIMER4 => InterruptHandler<peripherals::TIMER4>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `CCM_AAR` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":4038,"byte_end":4052,"line_start":105,"line_end":105,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"                    pub enum $irqs {}","highlight_start":21,"highlight_end":35}],"label":"similarly named enum `AAR_CCM` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs","byte_start":6655,"byte_end":7195,"line_start":337,"line_end":381,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"embassy_hal_internal::interrupt_mod!(","highlight_start":1,"highlight_end":1},{"text":"    CLOCK_POWER,","highlight_start":1,"highlight_end":1},{"text":"    RADIO,","highlight_start":1,"highlight_end":1},{"text":"    UARTE0,","highlight_start":1,"highlight_end":1},{"text":"    TWISPI0,","highlight_start":1,"highlight_end":1},{"text":"    TWISPI1,","highlight_start":1,"highlight_end":1},{"text":"    NFCT,","highlight_start":1,"highlight_end":1},{"text":"    GPIOTE,","highlight_start":1,"highlight_end":1},{"text":"    SAADC,","highlight_start":1,"highlight_end":1},{"text":"    TIMER0,","highlight_start":1,"highlight_end":1},{"text":"    TIMER1,","highlight_start":1,"highlight_end":1},{"text":"    TIMER2,","highlight_start":1,"highlight_end":1},{"text":"    RTC0,","highlight_start":1,"highlight_end":1},{"text":"    TEMP,","highlight_start":1,"highlight_end":1},{"text":"    RNG,","highlight_start":1,"highlight_end":1},{"text":"    ECB,","highlight_start":1,"highlight_end":1},{"text":"    AAR_CCM,","highlight_start":1,"highlight_end":1},{"text":"    WDT,","highlight_start":1,"highlight_end":1},{"text":"    RTC1,","highlight_start":1,"highlight_end":1},{"text":"    QDEC,","highlight_start":1,"highlight_end":1},{"text":"    COMP_LPCOMP,","highlight_start":1,"highlight_end":1},{"text":"    EGU0_SWI0,","highlight_start":1,"highlight_end":1},{"text":"    EGU1_SWI1,","highlight_start":1,"highlight_end":1},{"text":"    EGU2_SWI2,","highlight_start":1,"highlight_end":1},{"text":"    EGU3_SWI3,","highlight_start":1,"highlight_end":1},{"text":"    EGU4_SWI4,","highlight_start":1,"highlight_end":1},{"text":"    EGU5_SWI5,","highlight_start":1,"highlight_end":1},{"text":"    TIMER3,","highlight_start":1,"highlight_end":1},{"text":"    TIMER4,","highlight_start":1,"highlight_end":1},{"text":"    PWM0,","highlight_start":1,"highlight_end":1},{"text":"    PDM,","highlight_start":1,"highlight_end":1},{"text":"    MWU,","highlight_start":1,"highlight_end":1},{"text":"    PWM1,","highlight_start":1,"highlight_end":1},{"text":"    PWM2,","highlight_start":1,"highlight_end":1},{"text":"    SPI2,","highlight_start":1,"highlight_end":1},{"text":"    RTC2,","highlight_start":1,"highlight_end":1},{"text":"    I2S,","highlight_start":1,"highlight_end":1},{"text":"    FPU,","highlight_start":1,"highlight_end":1},{"text":"    USBD,","highlight_start":1,"highlight_end":1},{"text":"    UARTE1,","highlight_start":1,"highlight_end":1},{"text":"    QSPI,","highlight_start":1,"highlight_end":1},{"text":"    CRYPTOCELL,","highlight_start":1,"highlight_end":1},{"text":"    PWM3,","highlight_start":1,"highlight_end":1},{"text":"    SPIM3,","highlight_start":1,"highlight_end":1},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"embassy_hal_internal::interrupt_mod!","def_site_span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":294,"byte_end":320,"line_start":11,"line_end":11,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! interrupt_mod {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1195,"byte_end":1202,"line_start":26,"line_end":26,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    CCM_AAR => embassy_nrf::ccm::InterruptHandler;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1195,"byte_end":1202,"line_start":26,"line_end":26,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    CCM_AAR => embassy_nrf::ccm::InterruptHandler;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"AAR_CCM","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `CCM_AAR` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:26:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    CCM_AAR => embassy_nrf::ccm::InterruptHandler;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `AAR_CCM`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs:337:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0membassy_hal_internal::interrupt_mod!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOCK_POWER,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named enum `AAR_CCM` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::wdt`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1271,"byte_end":1287,"line_start":27,"line_end":27,"column_start":30,"column_end":46,"is_primary":true,"text":[{"text":"    WDT => embassy_nrf::wdt::InterruptHandler;","highlight_start":30,"highlight_end":46}],"label":"not found in `embassy_nrf::wdt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1253,"byte_end":1271,"line_start":27,"line_end":27,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"    WDT => embassy_nrf::wdt::InterruptHandler;","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::wdt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:27:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    WDT => embassy_nrf::wdt::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::wdt`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    WDT => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::wdt::\u001b[0m\u001b[0mInterruptHandler;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    WDT => InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI0_EGU0` in module `peripherals`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1459,"byte_end":1468,"line_start":30,"line_end":30,"column_start":66,"column_end":75,"is_primary":true,"text":[{"text":"    SWI0_EGU0 => embassy_nrf::swi::InterruptHandler<peripherals::SWI0_EGU0>;","highlight_start":66,"highlight_end":75}],"label":"not found in `peripherals`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI0_EGU0` in module `peripherals`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:30:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0merals::SWI0_EGU0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `peripherals`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI0_EGU0` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":4038,"byte_end":4052,"line_start":105,"line_end":105,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"                    pub enum $irqs {}","highlight_start":21,"highlight_end":35}],"label":"similarly named enum `EGU0_SWI0` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs","byte_start":6655,"byte_end":7195,"line_start":337,"line_end":381,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"embassy_hal_internal::interrupt_mod!(","highlight_start":1,"highlight_end":38},{"text":"    CLOCK_POWER,","highlight_start":1,"highlight_end":17},{"text":"    RADIO,","highlight_start":1,"highlight_end":11},{"text":"    UARTE0,","highlight_start":1,"highlight_end":12},{"text":"    TWISPI0,","highlight_start":1,"highlight_end":13},{"text":"    TWISPI1,","highlight_start":1,"highlight_end":13},{"text":"    NFCT,","highlight_start":1,"highlight_end":10},{"text":"    GPIOTE,","highlight_start":1,"highlight_end":12},{"text":"    SAADC,","highlight_start":1,"highlight_end":11},{"text":"    TIMER0,","highlight_start":1,"highlight_end":12},{"text":"    TIMER1,","highlight_start":1,"highlight_end":12},{"text":"    TIMER2,","highlight_start":1,"highlight_end":12},{"text":"    RTC0,","highlight_start":1,"highlight_end":10},{"text":"    TEMP,","highlight_start":1,"highlight_end":10},{"text":"    RNG,","highlight_start":1,"highlight_end":9},{"text":"    ECB,","highlight_start":1,"highlight_end":9},{"text":"    AAR_CCM,","highlight_start":1,"highlight_end":13},{"text":"    WDT,","highlight_start":1,"highlight_end":9},{"text":"    RTC1,","highlight_start":1,"highlight_end":10},{"text":"    QDEC,","highlight_start":1,"highlight_end":10},{"text":"    COMP_LPCOMP,","highlight_start":1,"highlight_end":17},{"text":"    EGU0_SWI0,","highlight_start":1,"highlight_end":15},{"text":"    EGU1_SWI1,","highlight_start":1,"highlight_end":15},{"text":"    EGU2_SWI2,","highlight_start":1,"highlight_end":15},{"text":"    EGU3_SWI3,","highlight_start":1,"highlight_end":15},{"text":"    EGU4_SWI4,","highlight_start":1,"highlight_end":15},{"text":"    EGU5_SWI5,","highlight_start":1,"highlight_end":15},{"text":"    TIMER3,","highlight_start":1,"highlight_end":12},{"text":"    TIMER4,","highlight_start":1,"highlight_end":12},{"text":"    PWM0,","highlight_start":1,"highlight_end":10},{"text":"    PDM,","highlight_start":1,"highlight_end":9},{"text":"    MWU,","highlight_start":1,"highlight_end":9},{"text":"    PWM1,","highlight_start":1,"highlight_end":10},{"text":"    PWM2,","highlight_start":1,"highlight_end":10},{"text":"    SPI2,","highlight_start":1,"highlight_end":10},{"text":"    RTC2,","highlight_start":1,"highlight_end":10},{"text":"    I2S,","highlight_start":1,"highlight_end":9},{"text":"    FPU,","highlight_start":1,"highlight_end":9},{"text":"    USBD,","highlight_start":1,"highlight_end":10},{"text":"    UARTE1,","highlight_start":1,"highlight_end":12},{"text":"    QSPI,","highlight_start":1,"highlight_end":10},{"text":"    CRYPTOCELL,","highlight_start":1,"highlight_end":16},{"text":"    PWM3,","highlight_start":1,"highlight_end":10},{"text":"    SPIM3,","highlight_start":1,"highlight_end":11},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"embassy_hal_internal::interrupt_mod!","def_site_span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":294,"byte_end":320,"line_start":11,"line_end":11,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! interrupt_mod {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1398,"byte_end":1407,"line_start":30,"line_end":30,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI0_EGU0 => embassy_nrf::swi::InterruptHandler<peripherals::SWI0_EGU0>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1398,"byte_end":1407,"line_start":30,"line_end":30,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI0_EGU0 => embassy_nrf::swi::InterruptHandler<peripherals::SWI0_EGU0>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"EGU0_SWI0","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI0_EGU0` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:30:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    SWI0_EGU0 => embassy_nrf::swi::InterruptHandle\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `EGU0_SWI0`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs:337:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0membassy_hal_internal::interrupt_mod!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOCK_POWER,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named enum `EGU0_SWI0` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI1_EGU1` in module `peripherals`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1536,"byte_end":1545,"line_start":31,"line_end":31,"column_start":66,"column_end":75,"is_primary":true,"text":[{"text":"    SWI1_EGU1 => embassy_nrf::swi::InterruptHandler<peripherals::SWI1_EGU1>;","highlight_start":66,"highlight_end":75}],"label":"not found in `peripherals`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI1_EGU1` in module `peripherals`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:31:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0merals::SWI1_EGU1>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `peripherals`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI1_EGU1` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":4038,"byte_end":4052,"line_start":105,"line_end":105,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"                    pub enum $irqs {}","highlight_start":21,"highlight_end":35}],"label":"similarly named enum `EGU1_SWI1` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs","byte_start":6655,"byte_end":7195,"line_start":337,"line_end":381,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"embassy_hal_internal::interrupt_mod!(","highlight_start":1,"highlight_end":38},{"text":"    CLOCK_POWER,","highlight_start":1,"highlight_end":17},{"text":"    RADIO,","highlight_start":1,"highlight_end":11},{"text":"    UARTE0,","highlight_start":1,"highlight_end":12},{"text":"    TWISPI0,","highlight_start":1,"highlight_end":13},{"text":"    TWISPI1,","highlight_start":1,"highlight_end":13},{"text":"    NFCT,","highlight_start":1,"highlight_end":10},{"text":"    GPIOTE,","highlight_start":1,"highlight_end":12},{"text":"    SAADC,","highlight_start":1,"highlight_end":11},{"text":"    TIMER0,","highlight_start":1,"highlight_end":12},{"text":"    TIMER1,","highlight_start":1,"highlight_end":12},{"text":"    TIMER2,","highlight_start":1,"highlight_end":12},{"text":"    RTC0,","highlight_start":1,"highlight_end":10},{"text":"    TEMP,","highlight_start":1,"highlight_end":10},{"text":"    RNG,","highlight_start":1,"highlight_end":9},{"text":"    ECB,","highlight_start":1,"highlight_end":9},{"text":"    AAR_CCM,","highlight_start":1,"highlight_end":13},{"text":"    WDT,","highlight_start":1,"highlight_end":9},{"text":"    RTC1,","highlight_start":1,"highlight_end":10},{"text":"    QDEC,","highlight_start":1,"highlight_end":10},{"text":"    COMP_LPCOMP,","highlight_start":1,"highlight_end":17},{"text":"    EGU0_SWI0,","highlight_start":1,"highlight_end":15},{"text":"    EGU1_SWI1,","highlight_start":1,"highlight_end":15},{"text":"    EGU2_SWI2,","highlight_start":1,"highlight_end":15},{"text":"    EGU3_SWI3,","highlight_start":1,"highlight_end":15},{"text":"    EGU4_SWI4,","highlight_start":1,"highlight_end":15},{"text":"    EGU5_SWI5,","highlight_start":1,"highlight_end":15},{"text":"    TIMER3,","highlight_start":1,"highlight_end":12},{"text":"    TIMER4,","highlight_start":1,"highlight_end":12},{"text":"    PWM0,","highlight_start":1,"highlight_end":10},{"text":"    PDM,","highlight_start":1,"highlight_end":9},{"text":"    MWU,","highlight_start":1,"highlight_end":9},{"text":"    PWM1,","highlight_start":1,"highlight_end":10},{"text":"    PWM2,","highlight_start":1,"highlight_end":10},{"text":"    SPI2,","highlight_start":1,"highlight_end":10},{"text":"    RTC2,","highlight_start":1,"highlight_end":10},{"text":"    I2S,","highlight_start":1,"highlight_end":9},{"text":"    FPU,","highlight_start":1,"highlight_end":9},{"text":"    USBD,","highlight_start":1,"highlight_end":10},{"text":"    UARTE1,","highlight_start":1,"highlight_end":12},{"text":"    QSPI,","highlight_start":1,"highlight_end":10},{"text":"    CRYPTOCELL,","highlight_start":1,"highlight_end":16},{"text":"    PWM3,","highlight_start":1,"highlight_end":10},{"text":"    SPIM3,","highlight_start":1,"highlight_end":11},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"embassy_hal_internal::interrupt_mod!","def_site_span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":294,"byte_end":320,"line_start":11,"line_end":11,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! interrupt_mod {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1475,"byte_end":1484,"line_start":31,"line_end":31,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI1_EGU1 => embassy_nrf::swi::InterruptHandler<peripherals::SWI1_EGU1>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1475,"byte_end":1484,"line_start":31,"line_end":31,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI1_EGU1 => embassy_nrf::swi::InterruptHandler<peripherals::SWI1_EGU1>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"EGU1_SWI1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI1_EGU1` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:31:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    SWI1_EGU1 => embassy_nrf::swi::InterruptHandle\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `EGU1_SWI1`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs:337:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0membassy_hal_internal::interrupt_mod!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOCK_POWER,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named enum `EGU1_SWI1` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI2_EGU2` in module `peripherals`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1613,"byte_end":1622,"line_start":32,"line_end":32,"column_start":66,"column_end":75,"is_primary":true,"text":[{"text":"    SWI2_EGU2 => embassy_nrf::swi::InterruptHandler<peripherals::SWI2_EGU2>;","highlight_start":66,"highlight_end":75}],"label":"not found in `peripherals`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI2_EGU2` in module `peripherals`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:32:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0merals::SWI2_EGU2>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `peripherals`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI2_EGU2` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":4038,"byte_end":4052,"line_start":105,"line_end":105,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"                    pub enum $irqs {}","highlight_start":21,"highlight_end":35}],"label":"similarly named enum `EGU2_SWI2` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs","byte_start":6655,"byte_end":7195,"line_start":337,"line_end":381,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"embassy_hal_internal::interrupt_mod!(","highlight_start":1,"highlight_end":38},{"text":"    CLOCK_POWER,","highlight_start":1,"highlight_end":17},{"text":"    RADIO,","highlight_start":1,"highlight_end":11},{"text":"    UARTE0,","highlight_start":1,"highlight_end":12},{"text":"    TWISPI0,","highlight_start":1,"highlight_end":13},{"text":"    TWISPI1,","highlight_start":1,"highlight_end":13},{"text":"    NFCT,","highlight_start":1,"highlight_end":10},{"text":"    GPIOTE,","highlight_start":1,"highlight_end":12},{"text":"    SAADC,","highlight_start":1,"highlight_end":11},{"text":"    TIMER0,","highlight_start":1,"highlight_end":12},{"text":"    TIMER1,","highlight_start":1,"highlight_end":12},{"text":"    TIMER2,","highlight_start":1,"highlight_end":12},{"text":"    RTC0,","highlight_start":1,"highlight_end":10},{"text":"    TEMP,","highlight_start":1,"highlight_end":10},{"text":"    RNG,","highlight_start":1,"highlight_end":9},{"text":"    ECB,","highlight_start":1,"highlight_end":9},{"text":"    AAR_CCM,","highlight_start":1,"highlight_end":13},{"text":"    WDT,","highlight_start":1,"highlight_end":9},{"text":"    RTC1,","highlight_start":1,"highlight_end":10},{"text":"    QDEC,","highlight_start":1,"highlight_end":10},{"text":"    COMP_LPCOMP,","highlight_start":1,"highlight_end":17},{"text":"    EGU0_SWI0,","highlight_start":1,"highlight_end":15},{"text":"    EGU1_SWI1,","highlight_start":1,"highlight_end":15},{"text":"    EGU2_SWI2,","highlight_start":1,"highlight_end":15},{"text":"    EGU3_SWI3,","highlight_start":1,"highlight_end":15},{"text":"    EGU4_SWI4,","highlight_start":1,"highlight_end":15},{"text":"    EGU5_SWI5,","highlight_start":1,"highlight_end":15},{"text":"    TIMER3,","highlight_start":1,"highlight_end":12},{"text":"    TIMER4,","highlight_start":1,"highlight_end":12},{"text":"    PWM0,","highlight_start":1,"highlight_end":10},{"text":"    PDM,","highlight_start":1,"highlight_end":9},{"text":"    MWU,","highlight_start":1,"highlight_end":9},{"text":"    PWM1,","highlight_start":1,"highlight_end":10},{"text":"    PWM2,","highlight_start":1,"highlight_end":10},{"text":"    SPI2,","highlight_start":1,"highlight_end":10},{"text":"    RTC2,","highlight_start":1,"highlight_end":10},{"text":"    I2S,","highlight_start":1,"highlight_end":9},{"text":"    FPU,","highlight_start":1,"highlight_end":9},{"text":"    USBD,","highlight_start":1,"highlight_end":10},{"text":"    UARTE1,","highlight_start":1,"highlight_end":12},{"text":"    QSPI,","highlight_start":1,"highlight_end":10},{"text":"    CRYPTOCELL,","highlight_start":1,"highlight_end":16},{"text":"    PWM3,","highlight_start":1,"highlight_end":10},{"text":"    SPIM3,","highlight_start":1,"highlight_end":11},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"embassy_hal_internal::interrupt_mod!","def_site_span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":294,"byte_end":320,"line_start":11,"line_end":11,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! interrupt_mod {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1552,"byte_end":1561,"line_start":32,"line_end":32,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI2_EGU2 => embassy_nrf::swi::InterruptHandler<peripherals::SWI2_EGU2>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1552,"byte_end":1561,"line_start":32,"line_end":32,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI2_EGU2 => embassy_nrf::swi::InterruptHandler<peripherals::SWI2_EGU2>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"EGU2_SWI2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI2_EGU2` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:32:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    SWI2_EGU2 => embassy_nrf::swi::InterruptHandle\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `EGU2_SWI2`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs:337:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0membassy_hal_internal::interrupt_mod!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOCK_POWER,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named enum `EGU2_SWI2` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI3_EGU3` in module `peripherals`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1690,"byte_end":1699,"line_start":33,"line_end":33,"column_start":66,"column_end":75,"is_primary":true,"text":[{"text":"    SWI3_EGU3 => embassy_nrf::swi::InterruptHandler<peripherals::SWI3_EGU3>;","highlight_start":66,"highlight_end":75}],"label":"not found in `peripherals`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI3_EGU3` in module `peripherals`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0merals::SWI3_EGU3>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `peripherals`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI3_EGU3` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":4038,"byte_end":4052,"line_start":105,"line_end":105,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"                    pub enum $irqs {}","highlight_start":21,"highlight_end":35}],"label":"similarly named enum `EGU3_SWI3` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs","byte_start":6655,"byte_end":7195,"line_start":337,"line_end":381,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"embassy_hal_internal::interrupt_mod!(","highlight_start":1,"highlight_end":38},{"text":"    CLOCK_POWER,","highlight_start":1,"highlight_end":17},{"text":"    RADIO,","highlight_start":1,"highlight_end":11},{"text":"    UARTE0,","highlight_start":1,"highlight_end":12},{"text":"    TWISPI0,","highlight_start":1,"highlight_end":13},{"text":"    TWISPI1,","highlight_start":1,"highlight_end":13},{"text":"    NFCT,","highlight_start":1,"highlight_end":10},{"text":"    GPIOTE,","highlight_start":1,"highlight_end":12},{"text":"    SAADC,","highlight_start":1,"highlight_end":11},{"text":"    TIMER0,","highlight_start":1,"highlight_end":12},{"text":"    TIMER1,","highlight_start":1,"highlight_end":12},{"text":"    TIMER2,","highlight_start":1,"highlight_end":12},{"text":"    RTC0,","highlight_start":1,"highlight_end":10},{"text":"    TEMP,","highlight_start":1,"highlight_end":10},{"text":"    RNG,","highlight_start":1,"highlight_end":9},{"text":"    ECB,","highlight_start":1,"highlight_end":9},{"text":"    AAR_CCM,","highlight_start":1,"highlight_end":13},{"text":"    WDT,","highlight_start":1,"highlight_end":9},{"text":"    RTC1,","highlight_start":1,"highlight_end":10},{"text":"    QDEC,","highlight_start":1,"highlight_end":10},{"text":"    COMP_LPCOMP,","highlight_start":1,"highlight_end":17},{"text":"    EGU0_SWI0,","highlight_start":1,"highlight_end":15},{"text":"    EGU1_SWI1,","highlight_start":1,"highlight_end":15},{"text":"    EGU2_SWI2,","highlight_start":1,"highlight_end":15},{"text":"    EGU3_SWI3,","highlight_start":1,"highlight_end":15},{"text":"    EGU4_SWI4,","highlight_start":1,"highlight_end":15},{"text":"    EGU5_SWI5,","highlight_start":1,"highlight_end":15},{"text":"    TIMER3,","highlight_start":1,"highlight_end":12},{"text":"    TIMER4,","highlight_start":1,"highlight_end":12},{"text":"    PWM0,","highlight_start":1,"highlight_end":10},{"text":"    PDM,","highlight_start":1,"highlight_end":9},{"text":"    MWU,","highlight_start":1,"highlight_end":9},{"text":"    PWM1,","highlight_start":1,"highlight_end":10},{"text":"    PWM2,","highlight_start":1,"highlight_end":10},{"text":"    SPI2,","highlight_start":1,"highlight_end":10},{"text":"    RTC2,","highlight_start":1,"highlight_end":10},{"text":"    I2S,","highlight_start":1,"highlight_end":9},{"text":"    FPU,","highlight_start":1,"highlight_end":9},{"text":"    USBD,","highlight_start":1,"highlight_end":10},{"text":"    UARTE1,","highlight_start":1,"highlight_end":12},{"text":"    QSPI,","highlight_start":1,"highlight_end":10},{"text":"    CRYPTOCELL,","highlight_start":1,"highlight_end":16},{"text":"    PWM3,","highlight_start":1,"highlight_end":10},{"text":"    SPIM3,","highlight_start":1,"highlight_end":11},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"embassy_hal_internal::interrupt_mod!","def_site_span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":294,"byte_end":320,"line_start":11,"line_end":11,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! interrupt_mod {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1629,"byte_end":1638,"line_start":33,"line_end":33,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI3_EGU3 => embassy_nrf::swi::InterruptHandler<peripherals::SWI3_EGU3>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1629,"byte_end":1638,"line_start":33,"line_end":33,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI3_EGU3 => embassy_nrf::swi::InterruptHandler<peripherals::SWI3_EGU3>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"EGU3_SWI3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI3_EGU3` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    SWI3_EGU3 => embassy_nrf::swi::InterruptHandle\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `EGU3_SWI3`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs:337:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0membassy_hal_internal::interrupt_mod!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOCK_POWER,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named enum `EGU3_SWI3` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI4_EGU4` in module `peripherals`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1767,"byte_end":1776,"line_start":34,"line_end":34,"column_start":66,"column_end":75,"is_primary":true,"text":[{"text":"    SWI4_EGU4 => embassy_nrf::swi::InterruptHandler<peripherals::SWI4_EGU4>;","highlight_start":66,"highlight_end":75}],"label":"not found in `peripherals`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI4_EGU4` in module `peripherals`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:34:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0merals::SWI4_EGU4>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `peripherals`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI4_EGU4` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":4038,"byte_end":4052,"line_start":105,"line_end":105,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"                    pub enum $irqs {}","highlight_start":21,"highlight_end":35}],"label":"similarly named enum `EGU4_SWI4` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs","byte_start":6655,"byte_end":7195,"line_start":337,"line_end":381,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"embassy_hal_internal::interrupt_mod!(","highlight_start":1,"highlight_end":38},{"text":"    CLOCK_POWER,","highlight_start":1,"highlight_end":17},{"text":"    RADIO,","highlight_start":1,"highlight_end":11},{"text":"    UARTE0,","highlight_start":1,"highlight_end":12},{"text":"    TWISPI0,","highlight_start":1,"highlight_end":13},{"text":"    TWISPI1,","highlight_start":1,"highlight_end":13},{"text":"    NFCT,","highlight_start":1,"highlight_end":10},{"text":"    GPIOTE,","highlight_start":1,"highlight_end":12},{"text":"    SAADC,","highlight_start":1,"highlight_end":11},{"text":"    TIMER0,","highlight_start":1,"highlight_end":12},{"text":"    TIMER1,","highlight_start":1,"highlight_end":12},{"text":"    TIMER2,","highlight_start":1,"highlight_end":12},{"text":"    RTC0,","highlight_start":1,"highlight_end":10},{"text":"    TEMP,","highlight_start":1,"highlight_end":10},{"text":"    RNG,","highlight_start":1,"highlight_end":9},{"text":"    ECB,","highlight_start":1,"highlight_end":9},{"text":"    AAR_CCM,","highlight_start":1,"highlight_end":13},{"text":"    WDT,","highlight_start":1,"highlight_end":9},{"text":"    RTC1,","highlight_start":1,"highlight_end":10},{"text":"    QDEC,","highlight_start":1,"highlight_end":10},{"text":"    COMP_LPCOMP,","highlight_start":1,"highlight_end":17},{"text":"    EGU0_SWI0,","highlight_start":1,"highlight_end":15},{"text":"    EGU1_SWI1,","highlight_start":1,"highlight_end":15},{"text":"    EGU2_SWI2,","highlight_start":1,"highlight_end":15},{"text":"    EGU3_SWI3,","highlight_start":1,"highlight_end":15},{"text":"    EGU4_SWI4,","highlight_start":1,"highlight_end":15},{"text":"    EGU5_SWI5,","highlight_start":1,"highlight_end":15},{"text":"    TIMER3,","highlight_start":1,"highlight_end":12},{"text":"    TIMER4,","highlight_start":1,"highlight_end":12},{"text":"    PWM0,","highlight_start":1,"highlight_end":10},{"text":"    PDM,","highlight_start":1,"highlight_end":9},{"text":"    MWU,","highlight_start":1,"highlight_end":9},{"text":"    PWM1,","highlight_start":1,"highlight_end":10},{"text":"    PWM2,","highlight_start":1,"highlight_end":10},{"text":"    SPI2,","highlight_start":1,"highlight_end":10},{"text":"    RTC2,","highlight_start":1,"highlight_end":10},{"text":"    I2S,","highlight_start":1,"highlight_end":9},{"text":"    FPU,","highlight_start":1,"highlight_end":9},{"text":"    USBD,","highlight_start":1,"highlight_end":10},{"text":"    UARTE1,","highlight_start":1,"highlight_end":12},{"text":"    QSPI,","highlight_start":1,"highlight_end":10},{"text":"    CRYPTOCELL,","highlight_start":1,"highlight_end":16},{"text":"    PWM3,","highlight_start":1,"highlight_end":10},{"text":"    SPIM3,","highlight_start":1,"highlight_end":11},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"embassy_hal_internal::interrupt_mod!","def_site_span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":294,"byte_end":320,"line_start":11,"line_end":11,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! interrupt_mod {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1706,"byte_end":1715,"line_start":34,"line_end":34,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI4_EGU4 => embassy_nrf::swi::InterruptHandler<peripherals::SWI4_EGU4>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1706,"byte_end":1715,"line_start":34,"line_end":34,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI4_EGU4 => embassy_nrf::swi::InterruptHandler<peripherals::SWI4_EGU4>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"EGU4_SWI4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI4_EGU4` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:34:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    SWI4_EGU4 => embassy_nrf::swi::InterruptHandle\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `EGU4_SWI4`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs:337:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0membassy_hal_internal::interrupt_mod!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOCK_POWER,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named enum `EGU4_SWI4` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI5_EGU5` in module `peripherals`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1844,"byte_end":1853,"line_start":35,"line_end":35,"column_start":66,"column_end":75,"is_primary":true,"text":[{"text":"    SWI5_EGU5 => embassy_nrf::swi::InterruptHandler<peripherals::SWI5_EGU5>;","highlight_start":66,"highlight_end":75}],"label":"not found in `peripherals`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI5_EGU5` in module `peripherals`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:35:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0merals::SWI5_EGU5>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `peripherals`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SWI5_EGU5` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":4038,"byte_end":4052,"line_start":105,"line_end":105,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"                    pub enum $irqs {}","highlight_start":21,"highlight_end":35}],"label":"similarly named enum `EGU5_SWI5` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs","byte_start":6655,"byte_end":7195,"line_start":337,"line_end":381,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"embassy_hal_internal::interrupt_mod!(","highlight_start":1,"highlight_end":38},{"text":"    CLOCK_POWER,","highlight_start":1,"highlight_end":17},{"text":"    RADIO,","highlight_start":1,"highlight_end":11},{"text":"    UARTE0,","highlight_start":1,"highlight_end":12},{"text":"    TWISPI0,","highlight_start":1,"highlight_end":13},{"text":"    TWISPI1,","highlight_start":1,"highlight_end":13},{"text":"    NFCT,","highlight_start":1,"highlight_end":10},{"text":"    GPIOTE,","highlight_start":1,"highlight_end":12},{"text":"    SAADC,","highlight_start":1,"highlight_end":11},{"text":"    TIMER0,","highlight_start":1,"highlight_end":12},{"text":"    TIMER1,","highlight_start":1,"highlight_end":12},{"text":"    TIMER2,","highlight_start":1,"highlight_end":12},{"text":"    RTC0,","highlight_start":1,"highlight_end":10},{"text":"    TEMP,","highlight_start":1,"highlight_end":10},{"text":"    RNG,","highlight_start":1,"highlight_end":9},{"text":"    ECB,","highlight_start":1,"highlight_end":9},{"text":"    AAR_CCM,","highlight_start":1,"highlight_end":13},{"text":"    WDT,","highlight_start":1,"highlight_end":9},{"text":"    RTC1,","highlight_start":1,"highlight_end":10},{"text":"    QDEC,","highlight_start":1,"highlight_end":10},{"text":"    COMP_LPCOMP,","highlight_start":1,"highlight_end":17},{"text":"    EGU0_SWI0,","highlight_start":1,"highlight_end":15},{"text":"    EGU1_SWI1,","highlight_start":1,"highlight_end":15},{"text":"    EGU2_SWI2,","highlight_start":1,"highlight_end":15},{"text":"    EGU3_SWI3,","highlight_start":1,"highlight_end":15},{"text":"    EGU4_SWI4,","highlight_start":1,"highlight_end":15},{"text":"    EGU5_SWI5,","highlight_start":1,"highlight_end":15},{"text":"    TIMER3,","highlight_start":1,"highlight_end":12},{"text":"    TIMER4,","highlight_start":1,"highlight_end":12},{"text":"    PWM0,","highlight_start":1,"highlight_end":10},{"text":"    PDM,","highlight_start":1,"highlight_end":9},{"text":"    MWU,","highlight_start":1,"highlight_end":9},{"text":"    PWM1,","highlight_start":1,"highlight_end":10},{"text":"    PWM2,","highlight_start":1,"highlight_end":10},{"text":"    SPI2,","highlight_start":1,"highlight_end":10},{"text":"    RTC2,","highlight_start":1,"highlight_end":10},{"text":"    I2S,","highlight_start":1,"highlight_end":9},{"text":"    FPU,","highlight_start":1,"highlight_end":9},{"text":"    USBD,","highlight_start":1,"highlight_end":10},{"text":"    UARTE1,","highlight_start":1,"highlight_end":12},{"text":"    QSPI,","highlight_start":1,"highlight_end":10},{"text":"    CRYPTOCELL,","highlight_start":1,"highlight_end":16},{"text":"    PWM3,","highlight_start":1,"highlight_end":10},{"text":"    SPIM3,","highlight_start":1,"highlight_end":11},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"embassy_hal_internal::interrupt_mod!","def_site_span":{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-hal-internal-0.2.0/src/interrupt.rs","byte_start":294,"byte_end":320,"line_start":11,"line_end":11,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! interrupt_mod {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1783,"byte_end":1792,"line_start":35,"line_end":35,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI5_EGU5 => embassy_nrf::swi::InterruptHandler<peripherals::SWI5_EGU5>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1783,"byte_end":1792,"line_start":35,"line_end":35,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SWI5_EGU5 => embassy_nrf::swi::InterruptHandler<peripherals::SWI5_EGU5>;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"EGU5_SWI5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SWI5_EGU5` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:35:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    SWI5_EGU5 => embassy_nrf::swi::InterruptHandle\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `EGU5_SWI5`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/chips/nrf52840.rs:337:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0membassy_hal_internal::interrupt_mod!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOCK_POWER,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UARTE0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named enum `EGU5_SWI5` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::pwm`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1886,"byte_end":1902,"line_start":36,"line_end":36,"column_start":31,"column_end":47,"is_primary":true,"text":[{"text":"    PWM0 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM0>;","highlight_start":31,"highlight_end":47}],"label":"not found in `embassy_nrf::pwm`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1868,"byte_end":1886,"line_start":36,"line_end":36,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"    PWM0 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM0>;","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::pwm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:36:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0msy_nrf::pwm::InterruptHandler<peripherals::PWM0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::pwm`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    PWM0 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::pwm::\u001b[0m\u001b[0mInterruptHandler<peripherals::PWM0>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    PWM0 => InterruptHandler<peripherals::PWM0>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::pwm`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1953,"byte_end":1969,"line_start":37,"line_end":37,"column_start":31,"column_end":47,"is_primary":true,"text":[{"text":"    PWM1 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM1>;","highlight_start":31,"highlight_end":47}],"label":"not found in `embassy_nrf::pwm`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1935,"byte_end":1953,"line_start":37,"line_end":37,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"    PWM1 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM1>;","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::pwm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:37:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0msy_nrf::pwm::InterruptHandler<peripherals::PWM1>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::pwm`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    PWM1 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::pwm::\u001b[0m\u001b[0mInterruptHandler<peripherals::PWM1>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    PWM1 => InterruptHandler<peripherals::PWM1>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::pwm`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2020,"byte_end":2036,"line_start":38,"line_end":38,"column_start":31,"column_end":47,"is_primary":true,"text":[{"text":"    PWM2 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM2>;","highlight_start":31,"highlight_end":47}],"label":"not found in `embassy_nrf::pwm`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2002,"byte_end":2020,"line_start":38,"line_end":38,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"    PWM2 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM2>;","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::pwm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:38:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0msy_nrf::pwm::InterruptHandler<peripherals::PWM2>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::pwm`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    PWM2 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::pwm::\u001b[0m\u001b[0mInterruptHandler<peripherals::PWM2>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    PWM2 => InterruptHandler<peripherals::PWM2>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `InterruptHandler` in module `embassy_nrf::pwm`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2087,"byte_end":2103,"line_start":39,"line_end":39,"column_start":31,"column_end":47,"is_primary":true,"text":[{"text":"    PWM3 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM3>;","highlight_start":31,"highlight_end":47}],"label":"not found in `embassy_nrf::pwm`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::buffered_uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::i2s::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::nfct::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::pdm::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qdec::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::qspi::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::radio::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::rng::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::saadc::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::spis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::temp::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twim::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::twis::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::uarte::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":24,"byte_end":24,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use defmt::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use embassy_nrf::usb::vbus_detect::InterruptHandler;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `InterruptHandler`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2069,"byte_end":2087,"line_start":39,"line_end":39,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"    PWM3 => embassy_nrf::pwm::InterruptHandler<peripherals::PWM3>;","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `InterruptHandler` in module `embassy_nrf::pwm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0msy_nrf::pwm::InterruptHandler<peripherals::PWM3>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `embassy_nrf::pwm`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::buffered_uarte::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::i2s::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::nfct::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     and 13 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `InterruptHandler`, refer to it directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    PWM3 => \u001b[0m\u001b[0m\u001b[38;5;9membassy_nrf::pwm::\u001b[0m\u001b[0mInterruptHandler<peripherals::PWM3>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    PWM3 => InterruptHandler<peripherals::PWM3>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2175,"byte_end":2208,"line_start":41,"line_end":41,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"    SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0 => embassy_nrf::spim::InterruptHandler<peripherals::TWISPI0>;","highlight_start":5,"highlight_end":38}],"label":"not found in `$crate::interrupt::typelevel`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:41:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0 => embassy_nrf:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `$crate::interrupt::typelevel`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2275,"byte_end":2308,"line_start":42,"line_end":42,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"    SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1 => embassy_nrf::spim::InterruptHandler<peripherals::TWISPI1>;","highlight_start":5,"highlight_end":38}],"label":"not found in `$crate::interrupt::typelevel`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:42:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1 => embassy_nrf:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `$crate::interrupt::typelevel`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `SPIM2_SPIS2_SPI2` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2375,"byte_end":2391,"line_start":43,"line_end":43,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    SPIM2_SPIS2_SPI2 => embassy_nrf::spim::InterruptHandler<peripherals::SPI2>;","highlight_start":5,"highlight_end":21}],"label":"not found in `$crate::interrupt::typelevel`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SPIM2_SPIS2_SPI2` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:43:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SPIM2_SPIS2_SPI2 => embassy_nrf::spim::InterruptH\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `$crate::interrupt::typelevel`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `IPC` in module `$crate::interrupt::typelevel`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2638,"byte_end":2641,"line_start":47,"line_end":47,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    IPC => embassy_nrf::ipc::InterruptHandler;","highlight_start":5,"highlight_end":8}],"label":"not found in `$crate::interrupt::typelevel`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `IPC` in module `$crate::interrupt::typelevel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:47:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IPC => embassy_nrf::ipc::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `$crate::interrupt::typelevel`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `embassy_nrf::radio::InterruptHandler`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":884,"byte_end":900,"line_start":20,"line_end":20,"column_start":34,"column_end":50,"is_primary":true,"text":[{"text":"    RADIO => embassy_nrf::radio::InterruptHandler;","highlight_start":34,"highlight_end":50}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/radio/mod.rs","byte_start":1177,"byte_end":1178,"line_start":46,"line_end":46,"column_start":29,"column_end":30,"is_primary":false,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":29,"highlight_end":30}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/radio/mod.rs","byte_start":1160,"byte_end":1176,"line_start":46,"line_end":46,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":900,"byte_end":900,"line_start":20,"line_end":20,"column_start":50,"column_end":50,"is_primary":true,"text":[{"text":"    RADIO => embassy_nrf::radio::InterruptHandler;","highlight_start":50,"highlight_end":50}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `embassy_nrf::radio::InterruptHandler`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:20:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RADIO => embassy_nrf::radio::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/radio/mod.rs:46:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InterruptHandler<T: Instance> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    RADIO => embassy_nrf::radio::InterruptHandler\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `embassy_nrf::rng::InterruptHandler`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":980,"byte_end":996,"line_start":22,"line_end":22,"column_start":30,"column_end":46,"is_primary":true,"text":[{"text":"    RNG => embassy_nrf::rng::InterruptHandler;","highlight_start":30,"highlight_end":46}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/rng.rs","byte_start":516,"byte_end":517,"line_start":20,"line_end":20,"column_start":29,"column_end":30,"is_primary":false,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":29,"highlight_end":30}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/rng.rs","byte_start":499,"byte_end":515,"line_start":20,"line_end":20,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":996,"byte_end":996,"line_start":22,"line_end":22,"column_start":46,"column_end":46,"is_primary":true,"text":[{"text":"    RNG => embassy_nrf::rng::InterruptHandler;","highlight_start":46,"highlight_end":46}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `embassy_nrf::rng::InterruptHandler`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:22:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RNG => embassy_nrf::rng::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/rng.rs:20:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InterruptHandler<T: Instance> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    RNG => embassy_nrf::rng::InterruptHandler\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `embassy_nrf::qdec::InterruptHandler`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1320,"byte_end":1336,"line_start":28,"line_end":28,"column_start":32,"column_end":48,"is_primary":true,"text":[{"text":"    QDEC => embassy_nrf::qdec::InterruptHandler;","highlight_start":32,"highlight_end":48}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/qdec.rs","byte_start":1288,"byte_end":1289,"line_start":51,"line_end":51,"column_start":29,"column_end":30,"is_primary":false,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":29,"highlight_end":30}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/qdec.rs","byte_start":1271,"byte_end":1287,"line_start":51,"line_end":51,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1336,"byte_end":1336,"line_start":28,"line_end":28,"column_start":48,"column_end":48,"is_primary":true,"text":[{"text":"    QDEC => embassy_nrf::qdec::InterruptHandler;","highlight_start":48,"highlight_end":48}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `embassy_nrf::qdec::InterruptHandler`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:28:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    QDEC => embassy_nrf::qdec::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/qdec.rs:51:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InterruptHandler<T: Instance> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    QDEC => embassy_nrf::qdec::InterruptHandler\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `embassy_nrf::pdm::InterruptHandler`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2153,"byte_end":2169,"line_start":40,"line_end":40,"column_start":30,"column_end":46,"is_primary":true,"text":[{"text":"    PDM => embassy_nrf::pdm::InterruptHandler;","highlight_start":30,"highlight_end":46}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/pdm.rs","byte_start":874,"byte_end":875,"line_start":31,"line_end":31,"column_start":29,"column_end":30,"is_primary":false,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":29,"highlight_end":30}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/pdm.rs","byte_start":857,"byte_end":873,"line_start":31,"line_end":31,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct InterruptHandler<T: Instance> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2169,"byte_end":2169,"line_start":40,"line_end":40,"column_start":46,"column_end":46,"is_primary":true,"text":[{"text":"    PDM => embassy_nrf::pdm::InterruptHandler;","highlight_start":46,"highlight_end":46}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `embassy_nrf::pdm::InterruptHandler`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:40:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PDM => embassy_nrf::pdm::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/manni/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/embassy-nrf-0.3.1/src/pdm.rs:31:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InterruptHandler<T: Instance> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    PDM => embassy_nrf::pdm::InterruptHandler\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `InterruptHandler: Handler<...>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":267,"byte_end":314,"line_start":11,"line_end":11,"column_start":13,"column_end":60,"is_primary":true,"text":[{"text":"    USBD => embassy_nrf::usb::vbus_detect::InterruptHandler;","highlight_start":13,"highlight_end":60}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Handler<embassy_nrf::interrupt::typelevel::USBD>` is not implemented for `InterruptHandler`\nbut trait `Handler<embassy_nrf::interrupt::typelevel::CLOCK_POWER>` is implemented for it","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `embassy_nrf::interrupt::typelevel::CLOCK_POWER`, found `embassy_nrf::interrupt::typelevel::USBD`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/home/manni/splitlyV2-code/target/thumbv7em-none-eabihf/release/deps/splitly_v2-7366830849c459d7.long-type-7496675408967336255.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `InterruptHandler: Handler<...>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:11:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m=> embassy_nrf::usb::vbus_detect::InterruptHandler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Handler<embassy_nrf::interrupt::typelevel::\u001b[0m\u001b[0m\u001b[1m\u001b[35mUSBD\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis not\u001b[0m\u001b[0m implemented for `InterruptHandler`\u001b[0m\n\u001b[0m           but trait `Handler<embassy_nrf::interrupt::typelevel::\u001b[0m\u001b[0m\u001b[1m\u001b[35mCLOCK_POWER\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for it\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `\u001b[0m\u001b[0m\u001b[1m\u001b[35membassy_nrf::interrupt::typelevel::CLOCK_POWER\u001b[0m\u001b[0m`, found `\u001b[0m\u001b[0m\u001b[1m\u001b[35membassy_nrf::interrupt::typelevel::USBD\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/home/manni/splitlyV2-code/target/thumbv7em-none-eabihf/release/deps/splitly_v2-7366830849c459d7.long-type-7496675408967336255.txt'\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 49 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 49 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0107, E0277, E0412, E0432, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0107, E0277, E0412, E0432, E0433.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0107`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0107`.\u001b[0m\n"}
